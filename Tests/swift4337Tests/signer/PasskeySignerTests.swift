//
//  PasskeySigner.swift
//
//
//  Created by Frederic DE MATOS on 22/07/2024.
//

import XCTest
import web3
import BigInt
@testable import swift4337



class PasskeySignerTests: XCTestCase {
    
    let signerPasskey = SafePasskeySigner(publicKey: PublicKey(x: "0x3628C66B9BA2B579E51E6B7DDCBF7526C0B882678655BDE48A7BB1504662A362", y: "0x9F4304A01B5B94BCEC32D29DAB08F3ABC5E305AE05FB953D0372BCB7E752ECC"), name: "test", domain: "srn")
    
    func testBuildSignatureBytesIsOk() async throws {
        
        let safeSignature = SafeSignature(signer: "0xB3a6Aa3eDDD715dbD84aD465Ab0f98919eBB6d5C", data: "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0db12d599cf850e2a0fce79ff9087e2d54885115ba7de5ed58977712a864df83c51488668759407f33488c9bd4e22b7cf4f7ba07f8e419bcb6084e4a2679bd2b90000000000000000000000000000000000000000000000000000000000000025a24f744b28d73f066bf3203d145765a7bc735e6328168c8b03e476da3ad0d8fe0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e226f726967696e223a2268747470733a2f2f736166652e676c6f62616c220000", dynamic: true)
        
        let expected = "0x000000000000000000000000B3a6Aa3eDDD715dbD84aD465Ab0f98919eBB6d5C0000000000000000000000000000000000000000000000000000000000000041000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0db12d599cf850e2a0fce79ff9087e2d54885115ba7de5ed58977712a864df83c51488668759407f33488c9bd4e22b7cf4f7ba07f8e419bcb6084e4a2679bd2b90000000000000000000000000000000000000000000000000000000000000025a24f744b28d73f066bf3203d145765a7bc735e6328168c8b03e476da3ad0d8fe0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e226f726967696e223a2268747470733a2f2f736166652e676c6f62616c220000"
        
        XCTAssertEqual(SignerUtils.buildSignatureBytes(signatures: [safeSignature]), expected)
    }
    
    func testDummySignatureIsOk() {
        let expected = "0x000000000000000000000000000000000000000000000000fd90fad33ee8b58f32c00aceead1358e4afc23f900000000000000000000000000000000000000000000000000000000000000410000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0ececececececececececececececececececececececececececececececececd5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5ad5af0000000000000000000000000000000000000000000000000000000000000025fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe04fefefefe00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c1226f726967696e223a22687474703a2f2f736166652e676c6f62616c222c2270616464696e67223a225468697320706164732074686520636c69656e74446174614a534f4e20736f20746861742077652063616e206c6561766520726f6f6d20666f72206164646974696f6e616c20696d706c656d656e746174696f6e207370656369666963206669656c647320666f722061206d6f72652061636375726174652027707265566572696669636174696f6e4761732720657374696d6174652e2200000000000000000000000000000000000000000000000000000000000000"
        
        XCTAssertEqual(try signerPasskey.dummySignature(), expected)
        
        
    }
}
