//
//  PasskeySigner.swift
//
//
//  Created by Frederic DE MATOS on 22/07/2024.
//

import XCTest
import web3
import BigInt
@testable import swift4337



class PasskeySignerTests: XCTestCase {
    
    let signerPasskey = PasskeySigner(publicX: BigUInt("24496937152968818026222377611516525898032551233447781531236978925153890247522"), publicY: BigUInt("4502259600096091720265343022608124325285676227578744180405546100919876529868"), domain: "string")
    
    func testBuildSignatureBytesIsOk() async throws {
        
        let safeSignature = SafeSignature(signer: "0xB3a6Aa3eDDD715dbD84aD465Ab0f98919eBB6d5C", data: "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0db12d599cf850e2a0fce79ff9087e2d54885115ba7de5ed58977712a864df83c51488668759407f33488c9bd4e22b7cf4f7ba07f8e419bcb6084e4a2679bd2b90000000000000000000000000000000000000000000000000000000000000025a24f744b28d73f066bf3203d145765a7bc735e6328168c8b03e476da3ad0d8fe0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e226f726967696e223a2268747470733a2f2f736166652e676c6f62616c220000", dynamic: true)
        
        let expected = "0x000000000000000000000000B3a6Aa3eDDD715dbD84aD465Ab0f98919eBB6d5C0000000000000000000000000000000000000000000000000000000000000041000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0db12d599cf850e2a0fce79ff9087e2d54885115ba7de5ed58977712a864df83c51488668759407f33488c9bd4e22b7cf4f7ba07f8e419bcb6084e4a2679bd2b90000000000000000000000000000000000000000000000000000000000000025a24f744b28d73f066bf3203d145765a7bc735e6328168c8b03e476da3ad0d8fe0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e226f726967696e223a2268747470733a2f2f736166652e676c6f62616c220000"
        
        XCTAssertEqual(SignerUtils.buildSignatureBytes(signatures: [safeSignature]), expected)
    }
}
