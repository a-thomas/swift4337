//
//  SignerUtilsTest.swift
//
//
//  Created by Frederic DE MATOS on 17/07/2024.
//

import XCTest
import web3
import BigInt
@testable import swift4337



class SignerUtilsTest: XCTestCase {

    let signerPasskey = PasskeySigner(publicX: BigUInt("24496937152968818026222377611516525898032551233447781531236978925153890247522"), publicY: BigUInt("4502259600096091720265343022608124325285676227578744180405546100919876529868"), domain: "string")
    let signerEOA = try! EthereumAccount.init(keyStorage: TestEthereumKeyStorage(privateKey: "0x4646464646464646464646464646464646464646464646464646464646464646"))
  
    
    func testPasskeySignerSetupCallDataIsOk() async throws {
        let setupCallData = try SignerUtils.setupCallData(signer: signerPasskey, safeConfig: SafeConfig.entryPointV7())
        let expected = "0xb63e800d0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000038869bf66a61cf6bdb996a6ae40d5853fd43b526000000000000000000000000000000000000000000000000000000000000014000000000000000000000000075cf11467937ce3f2f357ce24ffc3dbf8fd5c2260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000fd90fad33ee8b58f32c00aceead1358e4afc23f900000000000000000000000000000000000000000000000000000000000001c48d80ff0a00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000172012dd68b007b46fbe91b9a7c3eda5a7a1063cb5b47000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000648d0dc49f0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000075cf11467937ce3f2f357ce24ffc3dbf8fd5c22601fd90fad33ee8b58f32c00aceead1358e4afc23f9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000640dd9692f3628c66b9ba2b579e51e6b7ddcbf7526c0b882678655bde48a7bb1504662a36209f4304a01b5b94bcec32d29dab08f3abc5e305ae05fb953d0372bcb7e752ecc000000000000000000000000445a0683e494ea0c5af3e83c5159fbe47cf9e765000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

        
        XCTAssertEqual(setupCallData.web3.hexString, expected)
    }
    
    func testEOASignerSetupCallDataIsOk() async throws {
        let setupCallData = try SignerUtils.setupCallData(signer: signerEOA, safeConfig: SafeConfig.entryPointV7())
        let expected = "0xb63e800d000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000010000000000000000000000002dd68b007b46fbe91b9a7c3eda5a7a1063cb5b47000000000000000000000000000000000000000000000000000000000000014000000000000000000000000075cf11467937ce3f2f357ce24ffc3dbf8fd5c22600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000009d8a62f656a8d1615c1294fd71e9cfb3e4855a4f00000000000000000000000000000000000000000000000000000000000000648d0dc49f0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000075cf11467937ce3f2f357ce24ffc3dbf8fd5c22600000000000000000000000000000000000000000000000000000000"

        
        XCTAssertEqual(setupCallData.web3.hexString, expected)
    }
}
